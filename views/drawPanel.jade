extends layout

block content
  #drawPanel
    #tools
      | Hi, User! &nbsp; &nbsp; &nbsp; Tools:
      button(id='clearMyCanvas', type='button') Clear
      | &nbsp; &nbsp; &nbsp;
      button(id='chooseBlack', type='button') Black
      button(id='chooseGreen', type='button') Green
      button(id='chooseYellow', type='button') Yellow
      | &nbsp; &nbsp; &nbsp;
      button(id='chooseEraser', type='button') Eraser
      | &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
      button(id='chooseLogOut', type='button') Log Out

    canvas(id='myCanvas', style = 'border:1px solid #000000' )

    script.
      myCanvas = document.getElementById('myCanvas')
      clearMyCanvas = document.getElementById('clearMyCanvas')
      chooseBlack = document.getElementById('chooseBlack')
      chooseGreen = document.getElementById('chooseGreen')
      chooseYellow = document.getElementById('chooseYellow')
      chooseEraser = document.getElementById('chooseEraser')
      chooseLogOut = document.getElementById('chooseLogOut')

      context = myCanvas.getContext("2d");

      var colorBlack = "#000000";
      var colorGreen = "#659b41";
      var colorYellow = "#ffcf33";
      var colorWhite = "#FFFFFF";

      var curColor = colorBlack;
      var clickColor = new Array();

      var addEvent = function (object, type, callback) {
        if (object == null || typeof(object) == 'undefined') return;
        if (object.addEventListener) {
          object.addEventListener(type, callback, false);
        } else if (object.attachEvent) {
          object.attachEvent("on" + type, callback);
        } else {
          object["on" + type] = callback;
        }
      };

      addEvent(window, "resize", function (event) {
        redraw();
      });

      updateSize();

      myCanvas.addEventListener('mousedown', function (e) {
        var mouseX = e.pageX - this.offsetLeft;
        var mouseY = e.pageY - this.offsetTop;
        paint = true;
        addClick(e.pageX - this.offsetLeft, e.pageY - this.offsetTop);
        redraw();
      });

      myCanvas.addEventListener('mousemove', function (e) {
        if (paint) {
          addClick(e.pageX - this.offsetLeft, e.pageY - this.offsetTop, true);
          redraw();
        }
      });

      myCanvas.addEventListener('mouseup', function (e) {
        paint = false;
      });

      myCanvas.addEventListener('mouseleave', function (e) {
        paint = false;
      });

      clearMyCanvas.addEventListener('mousedown', function (e) {
        clickX = new Array();
        clickY = new Array();
        clickDrag = new Array();
        clickColor = new Array();
        clearCanvas();
      });

      chooseBlack.addEventListener('mousedown', function (e) {
        curColor = colorBlack;
      });

      chooseGreen.addEventListener('mousedown', function (e) {
        curColor = colorGreen;
      });

      chooseYellow.addEventListener('mousedown', function (e) {
        curColor = colorYellow;
      });

      chooseEraser.addEventListener('mousedown', function (e) {
        curColor = colorWhite;
      });

      chooseLogOut.addEventListener('mousedown', function (e) {
        window.location.href = '/logout';
      });

      var clickX = new Array();
      var clickY = new Array();
      var clickDrag = new Array();
      var paint;

      function updateSize() {
        context.canvas.width = Math.max(document.documentElement.clientWidth, window.innerWidth || 0) - 20;
        context.canvas.height = Math.max(document.documentElement.clientHeight, window.innerHeight || 0)-42;
      }

      function clearCanvas() {
        updateSize();
        context.fillStyle = '#ffffff'; // Work around for Chrome
        context.fillRect(0, 0, context.canvas.width, context.canvas.height); // Fill in the canvas with white
        myCanvas.width = myCanvas.width; // clears the canvas
      }

      function addClick(x, y, dragging) {
        clickX.push(x);
        clickY.push(y);
        clickDrag.push(dragging);
        clickColor.push(curColor);
      }

      function redraw() {
        updateSize();

        context.clearRect(0, 0, 1000000000, 1000000000); // Clears the canvas

        // context.strokeStyle = "#df4b26";
        context.lineJoin = "round";
        context.lineWidth = 5;

        for (var i = 0; i < clickX.length; i++) {
          context.beginPath();
          if (clickDrag[i] && i) {
            context.moveTo(clickX[i - 1], clickY[i - 1]);
          } else {
            context.moveTo(clickX[i] - 1, clickY[i]);
          }
          context.lineTo(clickX[i], clickY[i]);
          context.closePath();
          context.strokeStyle = clickColor[i];
          context.stroke();
        }
      }